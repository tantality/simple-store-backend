// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RoleTypes {
  Admin @map("admin")
  User  @map("user")
}

enum OrderStatus {
  InCart @map("in-cart")
  Placed @map("placed")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()

  roleType        RoleTypes @default(User) @map("role_type")
  email           String    @db.VarChar(256)
  normalizedEmail String    @map("normalized_email") @db.VarChar(256)
  password        String    @db.VarChar(256)
  refreshToken    String?   @map("refresh_token") @db.VarChar(256)

  orders Order[]

  @@unique([normalizedEmail])
  @@map("users")
}

model Product {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()

  name     String @db.VarChar(256)
  quantity Int    @db.SmallInt
  price    Int
  img      String

  orderItems OrderItem[]

  @@map("products")
}

model OrderItem {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()

  quantity Int @db.SmallInt
  price    Int

  product   Product @relation(fields: [productId], references: [id])
  productId String  @map("product_id") @db.Uuid
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String  @map("order_id") @db.Uuid

  @@map("order_items")
}

model Order {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()

  status     OrderStatus @default(InCart)
  totalPrice Int         @default(0) @map("total_price")

  items  OrderItem[]
  user   User        @relation(fields: [userId], references: [id])
  userId String      @map("user_id") @db.Uuid

  @@map("orders")
}
